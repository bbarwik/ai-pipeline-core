name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  quality-checks:
    uses: ./.github/workflows/reusable-quality-checks.yml

  documentation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e ".[dev]"

      - name: "Lint docstrings (Ruff: D + DOC)"
        run: ruff check --select D,DOC --ignore DOC502 .

      - name: Docstring coverage (Interrogate)
        run: interrogate -v --fail-under 100 ai_pipeline_core

      - name: "Validate API.md structure"
        run: |
          # Compare API structure by checking section headers
          # This ignores whitespace/formatting changes and focuses on actual content

          # Get headers from committed version
          grep '^##' API.md | sort > /tmp/api_headers_committed.txt || true

          # Regenerate API.md
          make docs-build

          # Get headers from regenerated version
          grep '^##' API.md | sort > /tmp/api_headers_new.txt || true

          # Compare the headers
          if ! diff -q /tmp/api_headers_committed.txt /tmp/api_headers_new.txt > /dev/null 2>&1; then
            echo "ERROR: API.md structure has changed. Please run 'make docs-build' locally and commit the updated file."
            echo ""
            echo "Header differences detected:"
            diff -u /tmp/api_headers_committed.txt /tmp/api_headers_new.txt || true
            exit 1
          else
            # Restore original file to avoid noise in git
            git checkout -- API.md
            echo "âœ“ API.md structure validated - formatting differences ignored"
          fi

  build:
    runs-on: ubuntu-latest
    needs: [quality-checks, documentation]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build wheel/sdist
        run: python -m build

      - name: Validate artifacts with Twine
        run: twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
